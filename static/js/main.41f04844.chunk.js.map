{"version":3,"sources":["components/Profile/profile.module.css","components/Statistics/statistical.module.css","components/FriendList/friendList.module.css","components/TransactionHistory/transactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","stat_list","map","stat","item","percentage","id","FriendList","friends","friend_list","friend","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","class","transaction_history","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41f04844.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2zrj2\",\"description\":\"profile_description__1b-VM\",\"avatar\":\"profile_avatar__1uKVG\",\"name\":\"profile_name__1Nt-V\",\"tag\":\"profile_tag__O01NN\",\"location\":\"profile_location__Ve-6v\",\"stats\":\"profile_stats__3UWhO\",\"list\":\"profile_list__3SmEo\",\"label\":\"profile_label__3sU2a\",\"quantity\":\"profile_quantity__3mgko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistical_statistics__2BHif\",\"title\":\"statistical_title__ORTi0\",\"stat_list\":\"statistical_stat_list__3eN8j\",\"item\":\"statistical_item__3Z5wc\",\"label\":\"statistical_label__Z016p\",\"percentage\":\"statistical_percentage__3Ldno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"friendList_friend_list__2KMqm\",\"item\":\"friendList_item__3NWMR\",\"statusOnline\":\"friendList_statusOnline__2FN3v\",\"statusOffline\":\"friendList_statusOffline__1I8Ny\",\"avatar\":\"friendList_avatar__18vBA\",\"name\":\"friendList_name__2XGOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"transactionHistory_transaction_history__1FYmc\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>@{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistical.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n\r\n    <ul className={styles.stat_list}>\r\n      {stats.map(stat => (\r\n        <li className={styles.item} key={stat.id}>\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styles.friend_list}>\r\n    {friends.map(friend => (\r\n      <li className={styles.item} key={friend.id}>\r\n        <span\r\n          className={\r\n            friend.isOnline ? styles.statusOnline : styles.statusOffline\r\n          }\r\n        ></span>\r\n        <img className={styles.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\r\n        <p className={styles.name}>{friend.name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './transactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table class={styles.transaction_history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  itemss: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory; ","import React from 'react';\nimport Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />;\n    </div> \n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}